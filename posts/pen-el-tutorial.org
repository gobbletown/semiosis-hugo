#+LATEX_HEADER: \usepackage[margin=0.5in]{geometry}
#+OPTIONS: toc:nil

#+HUGO_BASE_DIR: /home/shane/var/smulliga/source/git/semiosis/semiosis-hugo
#+HUGO_SECTION: ./posts

#+TITLE: Pen.el Tutorial
#+DATE: <2021-11-20>
#+AUTHOR: Shane Mulligan
#+KEYWORDS: openai pen gpt nlp prompt-engineering

** Initial setup
These instructions are designed for a linux
distribution with docker installed.

#+BEGIN_SRC bash -n :i bash :async :results verbatim code
  git clone "https://github.com/semiosis/pen.el"
  git clone "https://github.com/semiosis/prompts"
  git clone "https://github.com/semiosis/engines"
  git clone "https://github.com/semiosis/pen-contrib.el"

  mkdir -p ~/.pen

  # Put in your keys, or do not, it's up to you!
  echo "sk-<openai key here>" > ~/.pen/openai_api_key       # https://openai.com/
  echo "<ai21 key here>" > ~/.pen/ai21_api_key              # https://www.ai21.com/
  echo "<aix key here>" > ~/.pen/aix_api_key                # https://aixsolutionsgroup.com/
  echo "<hf key here>" > ~/.pen/hf_api_key                  # https://huggingface.co/
  echo "<nlpcloud key here>" > ~/.pen/nlpcloud_api_key      # https://nlpcloud.io/
  echo "<alephalpha key here>" > ~/.pen/alephalpha_api_key  # https://aleph-alpha.de/
  echo "<cohere key here>" > ~/.pen/cohere_api_key          # https://cohere.ai/

  # Add the scripts to the PATH
  echo export PATH="$(realpath .)/pen.el/scripts:\$PATH" >> ~/.profile

  # Add this to prevent C-s from freezing the terminal
  echo "stty stop undef 2>/dev/null; stty start undef 2>/dev/null" | tee -a ~/.zshrc >> ~/.bashrc

  # Source your .profile
  . ~/.profile

  # Run pen
  pen
#+END_SRC

** Basic demo
*** This is prompting
#+BEGIN_SRC bash -n :i bash :async :results verbatim code
  echo "Q: 'Why did the chicken cross the road?' A: '" | pen-prompt | head -n 1 | sed "s/'.*//"
#+END_SRC

#+RESULTS:
#+begin_src bash
To get to the other side.
#+end_src

*** Pen.el thin client
- [[https://mullikine.github.io/posts/thin-client-for-pen-el-just-load-pen-client-el/][Thin-client for Pen.el. Just load pen-client.el // Bodacious Blog]]

#+BEGIN_SRC emacs-lisp -n :async :results verbatim code
  (pen-fn-translate/3 (buffer-substring (region-beginning) (region-end)) "English" "French")
#+END_SRC


*** Introduction
**** Demonstrate basic invocation
***** Start pen server then use the client
***** M-SPC menu
***** Right click menu
***** Use =pen= with the web server
 - Control-Click for right click
***** Use =pen= in gui mode
***** Use =pen= in terminal mode
***** Use =lg= in gui mode
 - configuration of force-images
   - This should generate missing images from alttext
 - configuration of force-text
   - This should generate missing alttext
***** Use =lg= in terminal mode
**** Do imaginary programming
**** Surf the imaginary web
 - Search the web by selecting
 - Use eww browser
**** Use pen for autocompletion
**** Use pen for translation
**** Run pickup lines
**** Translate code
**** Run imaginary interpreters using =ii=
**** Use the shell interop
**** Use the LSP server
**** Use the glossary system
**** Use =cterm=
